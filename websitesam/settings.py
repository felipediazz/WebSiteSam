"""
Django settings for websitesam project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5vjs)*3=3rir**no2c1m%4)@)2l54&)b463+@b9$av#^px=93p'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#uso en AWS 
#ALLOWED_HOSTS = ["3.142.240.59"]

#uso local
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'websam',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'websitesam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'websam', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'websitesam.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

#STATIC_URL = 'static/'

# STATICFILES_DIRS = [(os.path.join(BASE_DIR, 'websam', 'imagenes'), 
#                      os.path.join(BASE_DIR, 'websam', 'img-segmentada')
#                      )]

STATIC_URL = 'static/'
STATIC_ROOT = '/static/'

IMG_ROOT = os.path.join(BASE_DIR, 'static','images' ,'imagenes')
CSV_ROOT = os.path.join(BASE_DIR, 'static','csv' ,'sam_csv', 'img_metadata')
JSON_ROOT = os.path.join(BASE_DIR, 'static','js' ,'sam_js')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    os.path.join(BASE_DIR, 'static','imagenes'),
    os.path.join(BASE_DIR, 'static','img-segmentada'),
    os.path.join(BASE_DIR, 'websam', 'imagenes'), 
    os.path.join(BASE_DIR, 'websam', 'img-segmentada'),
    os.path.join(BASE_DIR, 'static', 'csv' ,'sam_csv', 'img_metadata'),
    os.path.join(BASE_DIR, 'static', 'csv' ),
    os.path.join(BASE_DIR, 'static', 'csv' ,'sam_csv')
]



#STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')



# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'websam', 'imagenes')

MEDIA_URL = '/imagenes/'



#Notebook Ruta

#config_file = 'samtest.ipynb'
NOTE_ROOT = os.path.join(BASE_DIR, 'websam', 'notebooks')

NOTEBOOK_ARGUMENTS = [
    '--notebook-dir={NOTE_ROOT}',
]

#Ruta imagen segmentada

SEGM_ROOT = os.path.join(BASE_DIR, 'websam', 'img-segmentada')